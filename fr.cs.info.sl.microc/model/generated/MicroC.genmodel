<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" copyrightText="generated by Xtext 2.22.0" modelDirectory="/fr.cs.info.sl.microc/src-gen"
    modelPluginID="fr.cs.info.sl.microc" forceOverwrite="true" modelName="MicroC"
    updateClasspath="false" rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container"
    complianceLevel="8.0" copyrightFields="false" runtimeVersion="2.20">
  <genPackages prefix="MicroC" basePackage="fr.cs.info.sl.microc" disposableProviderFactory="true"
      fileExtensions="c" ecorePackage="MicroC.ecore#/">
    <genClasses ecoreClass="MicroC.ecore#//Model">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Model/decls"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Decl"/>
    <genClasses ecoreClass="MicroC.ecore#//C_include">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//C_include/fileName"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//C_function">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//C_function/type"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//C_function/name"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//C_function/params"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//C_function/specs"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//C_function/body"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//ReturnType">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//ReturnType/name"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Param">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Param/name"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Param/isArray"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Spec"/>
    <genClasses ecoreClass="MicroC.ecore#//Requires">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Requires/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Ensures">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Ensures/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Variant">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Variant/terms"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Block">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Block/statements"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Statement"/>
    <genClasses ecoreClass="MicroC.ecore#//PrimaryStatement"/>
    <genClasses ecoreClass="MicroC.ecore#//SimpleStatement"/>
    <genClasses ecoreClass="MicroC.ecore#//ExprAsStatement">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//ExprAsStatement/statement"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//ComplexStatement">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//ComplexStatement/condition"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Nop">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Nop/name"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Return">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Return/expression"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//VarDecl">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//VarDecl/name"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//VarDecl/isArray"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//VarDecl/size"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Break">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Break/name"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//IfThenElse">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//IfThenElse/truebranch"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//IfThenElse/falsebranch"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//While">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//While/body"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//For">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//For/init"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//For/postaction"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//For/body"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Label">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Label/name"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//LogicStatement">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LogicStatement/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Assert"/>
    <genClasses ecoreClass="MicroC.ecore#//Assume"/>
    <genClasses ecoreClass="MicroC.ecore#//Check"/>
    <genClasses ecoreClass="MicroC.ecore#//ExprStatement"/>
    <genClasses ecoreClass="MicroC.ecore#//VarInit">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//VarInit/name"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//VarInit/initvalue"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//VarAssign">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//VarAssign/pre"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//VarAssign/var"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//VarAssign/post"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//VarAssign/operator"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//VarAssign/assignedvalue"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//FunCall">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//FunCall/name"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//FunCall/params"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Scanf">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Scanf/variable"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//LoopBody">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LoopBody/annotations"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LoopBody/statements"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//LoopAnnot"/>
    <genClasses ecoreClass="MicroC.ecore#//Invariant">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Invariant/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Expr"/>
    <genClasses ecoreClass="MicroC.ecore#//BinLogDisj">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//BinLogDisj/left"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//BinLogDisj/right"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//BinLogConj"/>
    <genClasses ecoreClass="MicroC.ecore#//BinComp">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//BinComp/operator"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//BinAdd"/>
    <genClasses ecoreClass="MicroC.ecore#//BinAddMore">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//BinAddMore/operator"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//BinAddMore/arg"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//BinProd"/>
    <genClasses ecoreClass="MicroC.ecore#//BinProdMore">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//BinProdMore/operator"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//BinProdMore/arg"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Primary"/>
    <genClasses ecoreClass="MicroC.ecore#//Minus">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Minus/expr"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Not">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Not/expr"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Quark"/>
    <genClasses ecoreClass="MicroC.ecore#//ParenExpr">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//ParenExpr/expr"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//IntLiteral">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//IntLiteral/intvalue"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//StringLiteral">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//StringLiteral/string"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//VarRef">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//VarRef/name"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//VarRef/index"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//LogicDeclaration">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//LogicDeclaration/name"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//LogicFunctionDecl">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LogicFunctionDecl/params"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LogicFunctionDecl/definition"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//PredicateDecl">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//PredicateDecl/params"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//PredicateDecl/definition"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Axiom">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Axiom/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Lemma">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Lemma/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Goal">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//Goal/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Term"/>
    <genClasses ecoreClass="MicroC.ecore#//ComplexTerm"/>
    <genClasses ecoreClass="MicroC.ecore#//IfThenElseTerm">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//IfThenElseTerm/condition"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//IfThenElseTerm/truebranch"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//IfThenElseTerm/falsebranch"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//LetTerm">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//LetTerm/symbol"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LetTerm/letvalue"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LetTerm/context"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//BindTerm">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//BindTerm/kind"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//BindTerm/bound"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//BindTerm/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//Bound">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Bound/name"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//Bound/isColl"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//LogicTerm">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LogicTerm/left"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//LogicTerm/operator"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//LogicTerm/right"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//CompTerm"/>
    <genClasses ecoreClass="MicroC.ecore#//AddTerm"/>
    <genClasses ecoreClass="MicroC.ecore#//ProdTerm"/>
    <genClasses ecoreClass="MicroC.ecore#//PrimaryTerm"/>
    <genClasses ecoreClass="MicroC.ecore#//MinusTerm">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//MinusTerm/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//NotTerm">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//NotTerm/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//QuarkTerm"/>
    <genClasses ecoreClass="MicroC.ecore#//ParenTerm">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//ParenTerm/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//TermVar">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//TermVar/var"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//TermVar/index"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//TermVar/value"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//BoolLiteralTerm">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//BoolLiteralTerm/isTrue"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//IntLiteralTerm">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//IntLiteralTerm/intvalue"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//OldTerm">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//OldTerm/term"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//AtTerm">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//AtTerm/term"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//AtTerm/label"/>
    </genClasses>
    <genClasses ecoreClass="MicroC.ecore#//CallTerm">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute MicroC.ecore#//CallTerm/called"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference MicroC.ecore#//CallTerm/params"/>
    </genClasses>
  </genPackages>
</genmodel:GenModel>
