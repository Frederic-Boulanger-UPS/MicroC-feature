/*
 * generated by Xtext 2.22.0
 */
package fr.cs.info.sl.microc.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MicroCGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		// Get the ResourceSet which contains 'resource', which is our model
		var rset = resource.resourceSet;
		// Build a URI for the XMI file by suppressing the extension of the filename and appending the '.xmi' extension
		var xmiuri = resource.URI.trimFileExtension.appendFileExtension('xmi');		
		// Create a resource for saving the model as XMI
		var xmires = rset.createResource(xmiuri);
		// Add the first element of the model (there is only one Machine per file) to this resource
		xmires.contents.add(resource.contents.get(0));
		// Save the resource (as XMI because of the '.xmi' extension).
		xmires.save(null);
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
	}
}
